1.create dual stack vpc(3 subnets, 1 az NGW, 1 egw)
2. enable ipv4 and ipv6 for public subnets and ipv6 for only private subnets
3.add tags to subnets 
kubernetes.io/cluster/IPV6-sarthak   owned  --> All subnets
kubernetes.io/role/internal-elb 1   ---> private subnets
kubernetes.io/role/elb 1             ---> public subnets
4. launch manifest through client
5. install aws lb controller using helm values file
6. install application game-2048
7. check lb target group
8. hit lb


------------
vpc-052691ab2d8d03102

LOS-final-test-subnet-private1-ap-south-1a
subnet-0a51a18e349dead8f

LOS-final-test-subnet-private2-ap-south-1b
subnet-09d292cc753f86819

LOS-final-test-subnet-private3-ap-south-1c
subnet-0cad0fe40705d912d

LOS-final-test-subnet-public1-ap-south-1a
subnet-0a25e2b566823e6c8

LOS-final-test-subnet-public2-ap-south-1b
subnet-058b70165bec6d408

LOS-final-test-subnet-public3-ap-south-1c
subnet-0889c3575784a6f59

kubernetes.io/cluster/IPV6-sarthak   owned  --> All subnets
kubernetes.io/role/internal-elb 1   ---> private subnets
kubernetes.io/role/elb 1             ---> public subnets


----------
Manifest.yaml
----------
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig


metadata:
  name: IPV6-cluster
  region: ap-south-1
  version: "1.23"
kubernetesNetworkConfig:
  ipFamily: IPv6


vpc:
  id: "vpc-0780cd1389cef06f4"
  subnets:
    public:
      IPV6-Pub-1a:
        id: "subnet-00f62bed7b1e9e01f"
        region: "ap-south-1a"
      IPV6-Pub-1b:
        id: "subnet-07b6c694a11a7472a"
        region: "ap-south-1b"
      IPV6-Pub-1c:
        id: "subnet-04d854e96f53b7a9f"
        region: "ap-south-1c"
    private:
      IPV6-Pvt-1a:
        id: "subnet-07ee1b5f0a88f6189"
        region: "ap-south-1a"
      IPV6-Pvt-1b:
        id: "subnet-0c81a85baeb2641e5"
        region: "ap-south-1b"
      IPV6-Pvt-1c:
        id: "subnet-0c0ef0113339ad410"
        region: "ap-south-1c"
     
addons: 
  - name: vpc-cni 
    version: latest 
  - name: coredns 
    version: latest 
  - name: kube-proxy
    version: latest


managedNodeGroups:
  - name: IPV6-NG-1
    ami: ami-0d9c28c76ecc3d211
    amiFamily: AmazonLinux2
    overrideBootstrapCommand: |
      #!/bin/bash
      /etc/eks/bootstrap.sh IPV6-cluster --container-runtime containerd
    minSize: 1
    maxSize: 2
    desiredCapacity: 1
    instanceType: "t3a.medium"
    volumeSize: 20
    privateNetworking: true
    subnets:
      - IPV6-Pvt-1a
      - IPV6-Pvt-1b
      - IPV6-Pvt-1c
    labels: {role: IPV6-NG-1}
    ssh:
      publicKeyName: IPV6-NG-Keypair
    tags:
      nodegroup-role: IPV6-NG-1
      nodegroup-name: IPV6-NG-1
      Project: IPV6
      Env: Dev-Stag
      Layer: App
      Managedby: Workmates
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      withAddonPolicies:
        autoScaler: true
        externalDNS: true
        certManager: true
        ebs: true
        efs: true
        albIngress: true
        cloudWatch: true
iam:
  withOIDC: true
----------
aws eks update-kubeconfig --region ap-south-1 --name IPV6-sarthak
----------
AWSLoadBalancerController
----------
enable iam provider: 

    eksctl utils associate-iam-oidc-provider --cluster=IPV6-sarthak --region=ap-south-1 --approve

create cluster role:
 
   kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/rbac-role.yaml


create_iam_policy:

	curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam_policy.json
	
	aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json


create_service_account:

	eksctl create iamserviceaccount \
      --cluster=IPV6-sarthak \
      --namespace=kube-system \
      --name=aws-load-balancer-controller \
      --attach-policy-arn=arn:aws:iam::841353463971:policy/AWSLoadBalancerControllerIAMPolicy \
      --override-existing-serviceaccounts \
	  --region=ap-south-1 \
      --approve
-----------------------------

wget https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz
tar -xvf helm-v3.8.2-linux-amd64.tar.gz
cd linux-amd64/
remove helm from the default paths(echo $PATH)
mv the helm file to sbin --> mv helm /sbin/
------------------------------



helm repo add eks https://aws.github.io/eks-charts
helm repo update
helm pull eks/aws-load-balancer-controller
1.then untar the tgz file
2. make the following changes in the values file:
* cluster name
* region
* vpcid
* defaulTargetType ip
* createIngressClassResource true
* Serviceaccount false
NOTE: Refer the values file in the aws-load-balancer-controller directory  
-----------------------------
----------
application code:
----------
---
apiVersion: v1
kind: Namespace
metadata:
  name: game-2048
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: game-2048
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  replicas: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2048
    spec:
      containers:
      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: game-2048
  name: service-2048
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-2048
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: game-2048
  name: test-abcd6trf
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ip-address-type: dualstack
    alb.ingress.kubernetes.io/subnets: subnet-0a25e2b566823e6c8, subnet-058b70165bec6d408, subnet-0889c3575784a6f59
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-2048
              port:
                number: 80
